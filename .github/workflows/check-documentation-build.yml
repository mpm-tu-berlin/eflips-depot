name: Check Documentation on Pull Request

on: [push]

env:
  PYTHON_VERSION: "3.11"
  POETRY_VERSION: "1.4.2"
  POETRY_URL: https://install.python-poetry.org


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # We do not need SSH Keys, .. , as we only need the dev dependencies for building sphinx doc, nothing else
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config experimental.system-git-client true
      - name: Install Dependencies (dev only)
        run: |
          poetry install --no-root --only dev

      # Note: basically it would be easier to just use the -W flag in the sphinx-build command, but this seems not to work in GH Actions for some reason.
      # Compile the sphinx doc. If no errors arise, this will result in a green "succeed" mark in GH Actions
      # If warnings come up, they are put in the "warnings_on_build_XXX.txt" file
      - name: Compile Sphinx Documentation
        run: |
          cd docs/
          poetry run sphinx-build -b html . _build -w "warnings_on_build_XXX.txt"

      # Show the warnings in the GH Actions
      - name: Check for Warnings and store them temporary, if any
        if: ${{ hashFiles('docs/warnings_on_build_XXX.txt') != '' }}
        run: |
          echo "Some warnings exists"
          echo "::warning title=Warnungen existieren::sphinx_build liefert warnungen zur√ºck..."
        #echo "::set-output name=warnings::$(cat docs/warnings_on_build_XXX.txt)"

      - name: Read docs/warnings_on_build_XXX.txt
        id: package
        if: ${{ hashFiles('docs/warnings_on_build_XXX.txt') != '' }}
        uses: jaywcjlove/github-action-read-file@main
        with:
          path: docs/warnings_on_build_XXX.txt

      - name: docs/warnings_on_build_XXX.txt
        if: ${{ hashFiles('docs/warnings_on_build_XXX.txt') != '' }}
        run: echo "${{ steps.package.outputs.content }}"
          

      #- name: Display the warnings
      #  if: ${{ hashFiles('docs/warnings_on_build_XXX.txt') != '' }}
      #  run:
      #    echo ${{ steps.check_warnings.outputs.warnings }}
      #    # while read -r line; do echo "::warning title=Sphinx Warning::$line"; done < docs/warnings_on_build_XXX.txt

